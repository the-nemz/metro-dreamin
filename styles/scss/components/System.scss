.System
{
  padding: 0 $gutter-mini $gutter-mini;

  @include bplte(sm)
  {
    padding: 0;
  }

  &--fullscreen
  {
    height: 100vh;
    width: 100vw;
    padding: 0;
  }

  &--fullscreenFallback
  {
    position: fixed;
    top: 0;
    z-index: 10;
    height: 100%;
  }

  &--fullscreen &-main
  {
    height: 100%;
    width: 100%;
  }

  &--fullscreen &-primary
  {
    height: 100%;
    width: 100%;
    padding: 0;
  }

  &--fullscreen &-map
  {
    position: absolute;
    max-height: none;
    height: 100%;
    width: 100%;
    padding: 0;
    border-radius: 0;
  }

  &--fullscreen &-secondary
  {
    flex: initial;
    width: auto;
    max-width: none;
    padding: $gutter;
  }

  // hide Related maps but do not fully remove them from the
  // page so the maps don't need to reinitialize
  &--fullscreen .Related
  {
    display: none;
  }

  // do not suddenly zoom in/out of map when
  // page is scrolling
  &--scrolling .Map
  {
    pointer-events: none;
  }

  &-main
  {
    display: flex;

    @include bplte(sm)
    {
      flex-direction: column;
    }
  }

  &-primary
  {
    display: flex;
    flex-direction: column;

    @include bpgte(md)
    {
      flex-grow: 1;
      padding: 0 $gutter-mini $gutter-mini;
    }

    @include bplte(sm)
    {
      width: 100%;
      padding: 0 0 0 $drawer-closed-width;
    }
  }

  &-secondary
  {
    max-width: 375px;
    flex-basis: 375px;
    flex-shrink: 0;
    padding: 0 $gutter-mini $gutter-mini;

    @include bpgte(lg)
    {
      max-width: 410px;
      flex-basis: 410px;
    }

    @include bplte(sm)
    {
      max-width: none;
      padding: 0;
    }
  }

  &-map
  {
    position: relative;
    width: 100%;
    border-radius: $gutter-mini;
    overflow: hidden;
    -webkit-mask-image: -webkit-radial-gradient(white, black); // safari fix for border radius

    @include bplte(sm)
    {
      height: calc(60vh - $header-height/2 - 90px/2 - $gutter-mini*2 - 1px);
      border-radius: 0;
    }

    @include bpgte(md) {
      aspect-ratio: 16/9;
      max-height: calc(72vh - $header-height);
    }
  }

  &-actions
  {
    @include color(trans, background-color);
    position: absolute;
    top: $gutter/2;
    left: $gutter/2;
    padding: $gutter-mini;
    border-radius: $gutter-mini;

    .MapStyles
    {
      margin-top: $gutter/4;
      padding: 0 $gutter-mini/2;
    }
  }

  &-actionButtons
  {
    display: flex;
    align-items: center;
  }

  &-action
  {
    @include color(opp);
    position: relative;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    font-size: $gutter-mini*2;
    line-height: 1;
    height: $gutter*2;
    width: $gutter-mini*3;
    transition: $transition-fast font-size;

    &:hover
    {
      font-size: $gutter*2;

      .System-saveStatus
      {
        width: 14px;
        height: 14px;
        border-radius: 7px;
        bottom: 0;
        right: 2px;
      }
    }

    &:not(:first-child)
    {
      margin-left: $gutter/2;
    }
  }

  &-saveStatus
  {
    position: absolute;
    bottom: 2px;
    right: 4px;
    width: 10px;
    height: 10px;
    border-radius: 5px;
    z-index: 1;
    transition: $transition-fast all;

    &--saved
    {
      @include color(comment, background-color);
    }

    &--unsaved
    {
      @include color(warn, background-color);
    }
  }

  &-alert
  {
    @include color(trans, background-color);
    @include color(opp);
    position: absolute;
    width: 100%;
    z-index: 4;
    text-align: center;
    font-size: 36px;
    padding: $gutter;
    top: 50%;
    transform: translateY(-50%);
  }

  &-toast
  {
    @include color(nearer, background-color);
    @include color(opp);
    @include color(opp, border-color);
    position: fixed;
    width: auto;
    z-index: 4;
    text-align: center;
    font-size: 16px;
    padding: $gutter-mini;
    border-radius: 22px;
    border: $border-thin;
    left: 50%;
    transform: translateX(-50%);

    @include bpgte(md)
    {
      top: $main-header-height*2 + $gutter;
    }

    @include bplte(sm)
    {
      bottom: $footer-mobile-height + $gutter;
    }
  }

  &-lead
  {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: $gutter-mini;

    @include bplte(sm)
    {
      padding: 0 $gutter/4 $gutter/4;
      margin: 0;
      order: -1;
      flex-wrap: wrap;
    }
  }

  &-author
  {
    @include color(near, background-color);
    @include color(opp);
    flex-shrink: 0;
    max-width: percentage(1/3);
    display: flex;
    align-items: center;
    justify-content: flex-start;
    font-size: 16px;
    padding: $gutter-mini;
    border-radius: 100vh; // strange but rounds elem relative to height

    @include bp(sm)
    {
      max-width: calc(100% - 192px); // 192px is width of System-social in tablet
      box-sizing: border-box;
    }

    @include bplte(xs)
    {
      max-width: calc(100% - 128px); // 128px is width of System-social in mobile
      box-sizing: border-box;
    }

    i
    {
      display: flex;
      justify-content: center;
      font-size: $gutter-mini*2;
      width: $gutter*2;
    }
  }

  &-authorIcon
  {
    height: $gutter-mini*2;
    width: $gutter*2;
  }

  &-authorName
  {
    margin-left: $gutter/2;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  &-title
  {
    margin-left: $gutter/2;
    width: 0; // overridden by flex-grow
    flex-grow: 1;

    @include bplte(sm)
    {
      order: 1;
      flex-basis: 100%;
      margin: 0;
    }
  }

  &--viewOnly &-title
  {
    margin-left: $gutter;
  }

  &-social
  {
    display: flex;
    align-items: center;

    & > *
    {
      margin-left: $gutter;

      @include bplte(xs)
      {
        margin-left: $gutter/2;
      }
    }
  }

  &-details
  {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    flex-wrap: wrap;

    @include bplte(sm)
    {
      align-items: flex-start;
      flex-direction: column;
    }

    & > *:not(:first-child)
    {
      margin-top: $gutter-mini;
    }
  }

  &-detailTextItems,
  &-detailButtonItems
  {
    display: flex;
    flex-basis: 100%;

    @include bplte(sm)
    {
      align-items: flex-start;
      flex-direction: column;
    }

    & > *:not(:first-child)
    {
      @include bplte(sm)
      {
        margin-top: $gutter-mini;
      }

      &::before
      {
        @include color(opp, background-color);
        display: inline-block;
        margin: 0 $gutter-mini;
        width: $gutter/2;
        height: $gutter/2;
        border-radius: $gutter/4;

        @include bpgte(md)
        {
          content: '';
        }
      }
    }
  }

  &-detailsDivider
  {
    margin: 0 $gutter/2;

    @include bplte(sm)
    {
      display: none;
    }
  }

  &-timeText
  {
    font-style: italic;
  }

  &-private
  {
    display: flex;
    min-height: $gutter-mini*2;
    align-items: center;

    &--button
    {
      @include hoverActive
      {
        .System-privateText
        {
          text-decoration: underline;
        }
      }
    }
  }

  &-privateIcon
  {
    position: relative;
    font-size: 20px;
    height: $gutter-mini*2;
    width: 25px;
    margin-right: $gutter-mini/2;

    @include bplte(sm)
    {
      width: 36px;
      margin-right: $gutter/2;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }

  &-delete
  {
    display: flex;
    min-height: $gutter-mini*2;
    align-items: center;

    @include hoverActive
    {
      .System-deleteText
      {
        text-decoration: underline;
      }
    }
  }

  &-deleteIcon
  {
    font-size: 20px;
    height: $gutter-mini*2;
    width: 25px;
    margin-right: $gutter-mini/2;

    @include bplte(sm)
    {
      width: 36px;
      margin-right: $gutter/2;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }

  &-caption
  {
    flex-basis: 100%;

    @include bplte(sm)
    {
      flex-basis: auto;
      width: 100%;
    }
  }

  &-ancestry
  {
    flex-basis: 100%;

    @include bplte(sm)
    {
      flex-basis: auto;
      width: 100%;
    }
  }
}
