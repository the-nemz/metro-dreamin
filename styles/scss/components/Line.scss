.Line
{
  &-close
  {
    @include CloseButton;
  }

  &-title
  {
    display: flex;
    align-items: center;
    padding: 0 $gutter;

    @include bplte(xs)
    {
      padding: 0 $gutter-mini;
    }
  }

  &-namePrev
  {
    @include color(opp, border-color);
    border: $border-default;
    width: $gutter-mini*2;
    height: $gutter-mini*2;
    margin-right: $gutter-mini;
    flex-shrink: 0;
  }

  &-name
  {
    @include Focus-name;
    width: 100%;
  }

  &-stats
  {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
  }

  &-stat
  {
    white-space: nowrap;
    text-align: center;

    &:not(:last-child)::after
    {
      content: ',';
      margin-right: 0.5ch;
    }
  }

  &-statValue
  {
    font-weight: 700;
  }

  &-modeSelect,
  &-groupSelect
  {
    display: flex;
    align-items: center;
    margin-top: $gutter-mini;

    i
    {
      margin-left: $gutter/2;
    }
  }

  &-dropdown--hasDefault .Dropdown-option:first-child
  {
    font-style: italic;
    opacity: 0.75;
  }

  &-noStations,
  &-reverseWrap,
  &-duplicateWrap,
  &-deleteWrap
  {
    margin-top: $gutter-mini;
  }

  &-station
  {
    display: flex;
    justify-content: space-between;
    align-items: stretch;
  }

  &-stationGrade
  {
    flex-basis: 10px;
    flex-shrink: 0;
    min-height: 100%;
    margin-right: $gutter/2;
    border-left: $border-thin;
    border-right: $border-thin;
    border-color: var(--color-inverse);
    background-color: var(--color-inverse);
    overflow-y: hidden;

    &::before
    {
      content: '';
      display: inline-block;
      height: 100%;
      width: 8px;
    }

    &--above:before
    {
      border-left: $border-default;
      border-right: $border-default;
      border-color: var(--color);
    }

    &--at::before
    {
      border-left: $gutter/4 solid;
      border-right: $gutter/4 solid;
      border-color: var(--color);
    }

    &--below::before
    {
      border: 0;
      background: repeating-linear-gradient(
        0deg,
        var(--color) 1px,
        var(--color) 3px,
        transparent 0,
        transparent 6px
      );
    }
  }

  &-stationButton
  {
    @include SlideHover;
    display: flex;
    flex-grow: 1;
    align-items: center;
    padding: $gutter/2 0;
  }

  &-stationName
  {
    line-height: 20px;
    margin-bottom: -1px;
    text-align: left;
    word-break: break-word;
  }

  &-waypoints
  {
    display: flex;
    justify-content: space-between;
    align-items: stretch;
  }

  &-waypointsButton
  {
    display: flex;
    flex-grow: 1;
    align-items: center;
    padding: $gutter/2 0;
  }

  &-waypointsName
  {
    font-size: 14px;
    line-height: 20px;
    margin-bottom: -1px;
    font-style: italic;
    text-align: left;
    word-break: break-word;
  }

  &-transfers
  {
    display: flex;
    padding: 0 $gutter-mini;
    width: 120px;
    flex-wrap: wrap;
    margin-top: -1px;
  }

  &-transfer
  {
    margin-top: 1px;
  }

  &-transferPrev
  {
    @include color(opp, border-color);
    border: $border-default;
    width: $gutter;
    height: $gutter;
    margin: $gutter/4;
  }

  &-transferWalk
  {
    @include color(opp, border-color);
    border: $border-default;
    font-size: 10px;
    width: $gutter;
    height: $gutter;
    margin: $gutter/4;

    &[data-lightcolor='true']
    {
      color: $black;
    }

    &[data-lightcolor='false']
    {
      color: $white;
    }
  }

  &-stationRemove,
  &-waypointsRemove
  {
    padding: $gutter/4;
    transition: opacity $transition-xfast;

    @include hoverActive
    {
      opacity: 0.75;
    }
  }

  &-colorsText
  {
    width: 100%;
  }

  &-colors
  {
    margin-top: $gutter-mini;
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    grid-column-gap: $gutter/2;
    grid-row-gap: $gutter/2;

    @include bp(sm)
    {
      grid-column-gap: $gutter;
      grid-row-gap: $gutter;
    }
  }

  &-color
  {
    @include color(opp, border-color);
    border: $border-default;
    width: 100%;
    padding-bottom: calc(100% - #{$gutter/4});
  }

  &-colorPicker
  {
    margin-top: $gutter-mini*2;
    display: flex;
    flex-direction: column;
    align-items: center;

    .chrome-picker
    {
      // node module uses inline styles
      font-family: inherit !important;
      box-shadow: none !important;
      border-radius: $gutter/2 !important;
      overflow-x: hidden !important;
    }
  }

  &-customColor
  {
    @include color(opp, border-color);
    border: $border-default;
    height: $gutter*2;
    width: 100%;
    margin-top: 20px; // same as inside node module
  }

  &-showColorSlider
  {
    margin-top: $gutter;
  }

  &-customColorConfirm
  {
    margin-top: $gutter-mini;
  }

  &-reverse,
  &-duplicate,
  &-delete,
  &-colorsCancel,
  &-showColorSlider,
  &-customColorConfirm
  {
    width: 100%;
    text-align: left;
    font-style: italic;
  }

  &-colorsCancel
  {
    margin-top: $gutter-mini;

    @include bplte(xs)
    {
      margin: $gutter-mini 0;
    }
  }
}
