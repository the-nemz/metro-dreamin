@mixin Focus
{
  @include color(near, background-color);
  @include color(opp);
  position: relative;
  display: flex;
  flex-direction: column;
  height: auto;
  border-radius: $gutter-mini;
  padding: $gutter 0;
  z-index: 3;

  .System--normal &
  {
    margin-bottom: $gutter-mini*2;
    max-height: calc(100vh - #{$gutter-mini*2 + $header-height});

    @include bplte(sm)
    {
      @include color(nearer, border-color);
      padding: $gutter-mini $gutter-mini $gutter-mini $drawer-closed-width + $gutter-mini;
      margin: 0;
      height: auto;
      max-height: unset;
      border-top: $border-default;
      margin-bottom: 0;
      border-radius: 0;
      z-index: unset;
    }
  }

  .System--fullscreen &
  {
    @include color(trans, background-color);
    height: auto;
    max-height: calc(100vh - #{$gutter*2});
    bottom: 0;
    right: 0;
    width: 350px;
    border-radius: 0;

    @include bplte(sm)
    {
      bottom: $gutter;
      right: $gutter;
      position: fixed;
      width: calc(100% - #{$gutter*2});
    }
  }

  &-content
  {
    margin-top: $gutter;
    padding: 0 $gutter;
    overflow: auto;

    @include bpgte(md)
    {
      flex-grow: 1;
    }

    @include bplte(sm)
    {
      transition: all $transition-slow;
      padding: 0;

      .System--fullscreen &
      {
        max-height: calc(50vh - #{$gutter*4 + 46px});
      }

      &--collapsed
      {
        margin-top: 0;
        max-height: 0;
        overflow: hidden;
      }
    }

    @include bplte(xs)
    {
      overflow: unset;

      .System--fullscreen &
      {
        overflow: auto;
      }

      .System--fullscreenFallback &
      {
        max-height: calc(50vh - #{$gutter*5 + 46px});
      }
    }
  }
}

.Focus
{
  @include Focus;
}

@mixin Link
{
  text-decoration: none;

  @include hoverActive
  {
    text-decoration: underline;
  }
}

.Link
{
  @include Link;
}

@mixin Link--inverse
{
  text-decoration: underline;

  @include hoverActive
  {
    text-decoration: none;
  }
}

.Link--inverse
{
  @include Link--inverse;
}

@mixin Focus-name
{
  @include color(mid, border-bottom-color);
  text-align: center;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  padding: $gutter/2;
  background-color: transparent;
  border: $border-thin-transparent;
  transition: all $transition-fast;

  &:focus
  {
    outline: 0;
  }

  &--input
  {
    @include hoverActive
    {
      @include color(opp, border-bottom-color);
    }

    &:focus
    {
      @include color(opp, border-color);
      border-radius: $gutter-mini;
    }
  }
}

.Focus-name
{
  @include Focus-name;
}

@mixin NoPointer
{
  // Use for innermost no pinter events wrapper
  pointer-events: none;

  & > *
  {
    pointer-events: all;
  }
}

.NoPointer
{
  @include NoPointer;
}

@mixin Button--primary
{
  @include color(nearer);
  @include color(opp, border-color);
  @include color(opp, background-color);
  min-width: 100px;
  display: inline-block;
  text-align: center;
  font-weight: 700;
  border: $border-default;
  border-radius: $gutter-mini;
  padding: $gutter/2;
  transition: background-color $transition-fast, color $transition-fast;

  @include hoverActive
  {
    @include color(opp);
    background-color: transparent;
  }

  &:disabled
  {
    pointer-events: none;
  }
}

.Button--primary
{
  @include Button--primary;
}

@mixin Button--secondary
{
  @include color(branch, border-color);
  @include color(branch, background-color);
  color: $white;
  min-width: 100px;
  display: inline-block;
  text-align: center;
  font-weight: 700;
  border: $border-default;
  border-radius: $gutter-mini;
  padding: $gutter/2;
  transition: background-color $transition-fast, color $transition-fast;

  @include hoverActive
  {
    @include color(opp);
    background-color: transparent;
  }

  &:disabled
  {
    pointer-events: none;
  }
}

.Button--secondary
{
  @include Button--secondary;
}

@mixin Button--inverse
{
  @include color(further);
  @include color(opp, border-color);
  background-color: transparent;
  min-width: 100px;
  display: inline-block;
  text-align: center;
  font-weight: 700;
  border: $border-default;
  border-radius: $gutter-mini;
  padding: $gutter/2;
  height: 100%;
  transition: background-color $transition-fast, color $transition-fast;

  @include hoverActive
  {
    @include color(opp, background-color);
    @include color(main);
  }

  &:disabled
  {
    pointer-events: none;
  }
}

.Button--inverse
{
  @include Button--inverse;
}

@mixin SlideHover
{
  transition: padding-left $transition-xfast, margin-right $transition-xfast;
  margin-right: 0;

  @include hoverActive
  {
    padding-left: $gutter-mini;
    margin-right: -$gutter-mini;
  }
}

.SlideHover
{
  @include SlideHover;
}

@mixin CloseButton
{
  position: absolute;
  top: 0;
  right: 0;
  padding: $gutter/2;
  font-size: 20px;
  opacity: 1;
  transition: opacity $transition-xfast;

  @include hoverActive
  {
    opacity: 0.75;
  }
}

.CloseButton
{
  @include CloseButton;
}

@mixin ViewHeaderButton
{
  @include color(opp);
  display: flex;
  justify-content: center;
  font-size: 24px;
  min-width: $gutter-mini*2;

  i
  {
    opacity: 0.75;
    transition: opacity $transition-fast;

    @include hoverActive
    {
      opacity: 1;
    }
  }
}

.ViewHeaderButton
{
  @include ViewHeaderButton;
}

@mixin SystemSection
{
  @include color(near, background-color);
  @include color(opp);
  @include color(opp, border-color);
  border-radius: $gutter-mini;
  margin-top: $gutter-mini;
  padding: $gutter;

  @include bplte(sm)
  {
    border-radius: 0;
    margin-top: 2px;
    padding: $gutter-mini $gutter-mini $gutter-mini $drawer-closed-width + $gutter-mini;
  }
}

.SystemSection
{
  @include SystemSection;
}

@mixin MaxContentHeight
{
  height: calc(100vh - #{$header-height} - #{$footer-height});

  @include bplte(xs)
  {
    height: calc(100vh - #{$header-height} - #{$footer-mobile-height});
  }
}

.MaxContentHeight
{
  @include MaxContentHeight;
}

@mixin Hamburger
{
  position: relative;
  width: 45px;
  height: 44px;
  min-height: 44px;
  border-radius: $gutter-mini;
  transition: $transition-fast background-color;

  @include hoverActive
  {
    @include color(nearer, background-color);
  }

  & > *
  {
    @include color(opp, background-color);
    display: block;
    position: absolute;
    content: '';
    height: 2px;
    border-radius: 1px;
    width: 21px;
    left: 12px;
    transition: $transition-slow transform, $transition-slow opacity, $transition-slow top;

    &:nth-child(1)
    {
      top: percentage(1/3);

      .Hamburger--open &
      {
        transform: rotate(45deg);
        top: 50%;
      }
    }

    &:nth-child(2)
    {
      top: 50%;

      .Hamburger--open &
      {
        opacity: 0;
      }
    }

    &:nth-child(3)
    {
      top: percentage(2/3);

      .Hamburger--open &
      {
        transform: rotate(-45deg);
        top: 50%;
      }
    }
  }
}

.Hamburger
{
  @include Hamburger;
}

@keyframes spinner {
  0%
  {
    transform: rotate(0deg);
  }

  100%
  {
    transform: rotate(360deg);
  }
}

@mixin Spinner
{
  font-size: 100px;
  line-height: 100px;
  animation: spinner 1s steps(8, end) infinite;

  i
  {
    display: flex;
  }
}

.Spinner
{
  @include Spinner;
}

@mixin Ellipsis
{
  &::after
  {
    display: inline-block;
    white-space: nowrap;
    min-width: 10px;
    animation: ellipsisFrames steps(1, end) 2s infinite;
    content: '...';
  }

  @keyframes ellipsisFrames
  {
    0%   { content: '...'; }
    25%  { content: ''; }
    50%  { content: '.'; }
    75%  { content: '..'; }
    100% { content: '...'; }
  }
}

.Ellipsis
{
  @include Ellipsis;
}

@mixin Linkify
{
  word-break: break-all;
}

.Linkify
{
  @include Linkify;
}
