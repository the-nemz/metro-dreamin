// Use this mixin to style both light and dark mode with the same call
@mixin color($type, $prop: 'color') {
  .DarkMode &
  {
    @if $type == main
    {
      #{$prop}: $black;
    }
    @else if $type == opp
    {
      #{$prop}: $white;
    }
    @else if $type == near
    {
      #{$prop}: $gray-dark;
    }
    @else if $type == nearer
    {
      #{$prop}: $gray-darker;
    }
    @else if $type == far
    {
      #{$prop}: $gray-light;
    }
    @else if $type == further
    {
      #{$prop}: $gray-lighter;
    }
    @else if $type == trans
    {
      #{$prop}: $black-transparent;
    }
    @else if $type == star
    {
      #{$prop}: $gold-light;
    }
    @else if $type == alert
    {
      #{$prop}: $red;
    }
    @else if $type == user
    {
      #{$prop}: $blue-light;
    }
    @else
    {
      @warn "Color parameters must be either main, opp, near, or trans.";
    }
  }

  .LightMode &
  {
    @if $type == main
    {
      #{$prop}: $white;
    }
    @else if $type == opp
    {
      #{$prop}: $black;
    }
    @else if $type == near
    {
      #{$prop}: $gray-light;
    }
    @else if $type == nearer
    {
      #{$prop}: $gray-lighter;
    }
    @else if $type == far
    {
      #{$prop}: $gray-dark;
    }
    @else if $type == further
    {
      #{$prop}: $gray-darker;
    }
    @else if $type == trans
    {
      #{$prop}: $white-transparent;
    }
    @else if $type == star
    {
      #{$prop}: $gold-dark;
    }
    @else if $type == alert
    {
      #{$prop}: $red;
    }
    @else if $type == user
    {
      #{$prop}: $blue-dark;
    }
    @else
    {
      @warn "Color parameters must be either main, opp, near, or trans.";
    }
  }
}
